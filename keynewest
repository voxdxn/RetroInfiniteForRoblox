--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\65\43\118\72\48\120\99\109\47\121\67\104\83\108\108\78\69\51\89\75\51\106\101\82\57\70\86\88\68\84\51\116\109\78\48\118\71\49\118\109\88\121\122\47\75\80\55\71\67\52\102\87\76\55\54\74\84\101\73\76\85\48\121\120\104\53\121\73\97\73\122\43\80\89\76\117\49\99\77\72\56\116\109\121\80\104\47\90\115\74\119\104\69\108\73\57\113\70\51\53\68\117\105\120\72\100\83\78\121\108\104\106\50\119\69\70\116\110\122\70\43\67\80\56\111\77\116\56\76\77\98\113\43\65\71\99\109\84\99\104\90\120\53\122\73\51\76\98\69\70\116\98\48\119\111\109\83\99\43\98\66\101\77\53\111\90\109\97\71\107\118\56\54\70\89\75\99\120\77\71\89\66\87\88\56\108\121\90\108\66\104\90\81\55\53\50\110\69\106\67\69\57\49\76\120\70\85\102\49\68\121\50\86\49\57\103\116\97\84\57\115\120\81\83\66\82\70\90\81\102\52\104\81\51\102\120\119\67\74\104\74\50\80\53\103\120\114\66\116\52\110\74\115\65\119\111\47\121\116\72\97\67\75\65\71\87\55\121\85\76\49\78\89\120\65\80\112\74\119\69\111\73\97\88\83\99\112\69\100\110\110\53\53\120\120\102\114\101\75\102\78\113\122\82\78\52\71\107\103\50\119\89\119\51\104\108\108\121\118\109\98\90\50\117\106\118\84\103\101\104\90\51\43\122\90\47\71\75\79\97\51\55\78\117\67\78\57\97\108\83\109\77\81\49\50\52\52\111\68\102\108\54\106\86\101\54\50\88\47\121\47\106\54\106\69\113\80\118\50\48\56\108\114\56\80\100\102\117\51\69\98\69\110\85\118\87\67\99\118\87\118\112\71\73\79\116\56\97\118\75\122\112\82\51\103\99\66\48\79\48\118\110\101\117\102\69\109\85\115\104\97\104\48\106\116\71\55\117\48\115\113\43\66\55\88\69\108\116\106\71\113\108\87\109\114\106\43\115\99\111\66\53\69\116\54\97\120\81\51\57\120\66\105\67\114\97\98\55\102\56\66\76\101\116\111\68\80\48\48\112\73\53\57\83\87\48\76\84\70\43\43\114\102\111\66\43\48\119\108\54\122\103\55\104\77\122\73\112\107\69\74\48\103\97\81\80\66\48\79\90\105\112\102\101\54\98\68\57\47\115\114\69\115\82\87\57\81\67\54\68\79\43\56\75\52\57\72\117\103\111\114\117\50\82\97\52\120\104\120\120\56\75\66\67\109\52\110\114\116\81\87\65\76\98\113\53\70\77\76\84\90\98\119\56\81\52\67\115\71\79\54\106\84\118\53\54\98\115\100\121\50\108\120\78\99\67\103\97\104\81\102\78\90\71\106\76\74\115\73\87\50\117\52\115\87\104\109\71\121\86\115\55\101\114\88\53\48\102\88\90\106\90\56\88\112\120\67\113\88\82\74\101\108\109\111\57\104\115\73\74\84\78\88\77\65\79\118\50\81\121\68\75\54\53\109\43\73\65\71\111\103\80\116\120\116\122\104\66\118\83\101\50\72\114\80\110\68\50\77\53\57\67\74\50\86\106\51\55\115\65\120\57\50\72\49\87\70\52\54\87\52\114\102\99\104\89\78\100\97\82\86\66\87\85\82\66\115\74\82\81\51\65\122\97\116\49\103\77\65\110\84\119\106\67\84\80\73\76\77\109\75\107\52\102\98\51\80\104\50\114\120\48\108\88\121\57\119\77\48\73\54\105\99\48\70\111\48\75\113\65\83\80\110\65\97\111\72\119\82\81\76\88\43\81\99\53\67\68\51\86\57\108\109\77\51\67\55\82\51\86\108\52\112\103\74\86\83\115\112\69\84\49\55\115\65\53\114\79\84\75\51\114\99\88\55\104\108\100\106\80\113\72\83\120\120\65\48\51\104\53\68\101\75\97\88\89\107\74\105\86\119\112\43\47\52\49\122\113\109\90\116\68\105\81\97\117\109\100\48\66\67\99\120\112\101\89\76\73\66\47\88\56\47\97\84\76\66\71\114\56\97\115\118\110\103\112\50\84\53\47\119\122\105\119\81\119\57\100\115\117\112\111\49\56\66\117\109\56\107\109\111\48\82\108\47\47\85\99\98\51\112\97\52\111\53\100\48\100\49\43\114\43\56\114\104\54\50\65\101\112\97\100\111\65\88\101\43\103\76\50\100\67\56\107\116\113\107\100\50\97\104\121\71\97\78\107\70\108\117\122\99\116\57\53\77\67\113\53\50\98\113\121\53\67\88\83\77\87\71\111\112\51\82\86\99\100\85\48\102\69\104\76\121\57\82\79\77\87\67\85\100\53\78\73\111\90\119\106\100\103\98\68\49\67\57\110\82\87\118\53\72\87\113\47\90\107\73\101\99\89\112\68\102\43\67\50\120\83\101\80\82\86\67\51\50\102\66\100\122\84\83\66\67\89\112\77\76\74\108\81\71\101\98\82\116\110\116\68\83\52\65\121\72\99\80\81\98\113\113\111\97\109\55\48\56\70\51\119\84\51\103\122\105\81\69\118\120\82\90\68\86\111\120\121\77\73\43\83\84\106\50\76\75\89\90\49\88\75\121\106\106\112\98\66\57\74\104\72\51\54\86\117\55\74\70\88\49\65\105\90\109\90\86\82\48\119\107\79\118\72\113\111\119\54\113\70\112\87\86\116\109\109\105\109\111\43\56\99\86\85\76\117\69\117\43\54\114\74\86\89\51\76\82\51\113\55\53\115\75\121\104\116\105\121\99\83\114\111\56\67\75\78\79\110\100\120\117\52\119\48\55\77\89\43\66\55\116\54\51\51\53\86\73\69\67\71\66\72\75\65\97\80\119\76\72\121\100\55\68\108\85\72\106\54\114\106\57\52\98\72\104\52\75\72\74\81\120\109\108\89\121\105\70\68\49\120\107\90\104\90\86\119\86\69\77\102\116\71\102\65\107\111\105\73\53\101\80\72\72\48\120\90\75\101\84\70\97\84\119\89\104\112\81\50\49\104\105\71\48\82\80\103\56\81\83\67\117\51\84\56\79\110\85\115\69\73\108\48\106\83\54\73\81\75\67\72\121\56\53\102\74\120\113\115\114\73\112\98\120\77\56\77\72\122\115\78\86\74\99\43\120\113\85\109\71\76\48\85\115\109\110\51\113\68\82\81\55\117\85\43\112\56\115\100\105\48\84\103\67\54\80\118\77\66\121\77\78\105\114\111\79\75\76\113\87\79\108\104\50\67\69\88\100\89\100\122\49\104\97\87\50\54\100\116\56\103\116\109\81\119\50\84\116\47\55\57\112\89\65\107\77\98\106\103\120\69\71\65\105\106\102\57\80\48\79\121\47\81\114\117\47\75\116\78\87\87\68\116\79\100\88\70\52\53\67\99\117\76\114\68\68\98\97\120\79\113\116\57\121\88\121\49\109\86\120\113\79\101\106\84\73\49\90\79\79\101\103\108\84\110\55\72\89\112\113\67\57\97\74\53\47\79\116\107\109\50\110\121\81\54\66\83\86\47\71\113\49\88\112\77\75\76\113\86\83\73\66\77\90\56\98\86\52\117\87\102\54\121\79\56\71\107\97\109\89\74\113\77\114\82\106\116\85\103\114\81\83\51\104\80\51\70\102\77\43\83\68\67\101\68\74\65\112\112\49\107\72\53\73\111\65\70\72\113\100\115\79\104\110\100\87\75\56\73\107\89\77\119\47\51\118\106\79\84\117\56\104\114\57\67\48\105\98\116\79\75\89\67\81\79\99\90\109\100\87\113\74\110\88\89\87\75\75\78\109\117\114\68\72\51\83\68\113\100\87\109\43\116\50\68\112\71\106\119\106\70\87\80\101\115\103\114\90\105\73\67\82\114\114\122\79\50\103\52\87\52\121\104\81\116\115\90\67\111\110\74\114\49\52\70\121\53\48\72\118\89\51\73\112\113\78\57\75\66\79\106\78\54\116\53\51\54\65\56\66\85\113\75\117\66\116\73\48\47\43\88\105\75\119\53\110\49\47\112\54\51\79\88\79\120\115\81\97\85\52\113\50\47\100\113\77\121\104\70\74\72\69\70\75\88\71\106\83\88\50\56\115\89\85\106\116\54\120\116\74\105\110\110\99\117\116\83\108\79\117\100\117\90\86\52\72\118\55\120\68\122\111\49\86\55\71\55\122\72\84\78\79\102\68\55\107\67\84\103\118\49\51\116\49\73\81\121\68\119\55\109\115\118\112\112\65\120\77\51\110\66\121\85\118\81\56\97\73\109\106\79\56\79\107\47\52\69\53\71\117\101\52\88\121\75\66\120\121\90\47\118\81\98\51\49\89\122\47\54\80\57\72\43\47\51\73\122\49\65\50\66\108\74\74\74\52\51\120\112\119\111\80\53\74\108\103\48\110\77\112\98\53\88\114\97\73\89\55\69\67\116\53\101\57\106\112\88\75\55\106\88\70\118\82\103\113\71\110\88\111\121\71\56\54\75\56\47\73\109\79\83\57\98\112\74\78\112\116\105\55\75\74\65\104\97\87\88\116\48\54\117\120\70\54\57\43\85\68\70\122\43\114\68\57\101\86\65\81\47\51\108\77\116\72\107\79\98\51\98\75\77\43\118\106\83\122\116\75\122\76\53\52\66\78\86\109\120\86\109\103\70\85\112\79\76\106\115\80\105\88\75\85\80\81\87\89\85\49\105\57\110\78\74\52\43\112\97\81\79\72\72\84\67\65\117\85\85\71\81\97\86\66\90\118\98\109\55\76\57\65\107\121\100\50\43\56\99\102\70\114\84\75\104\74\43\101\75\110\121\113\86\48\55\82\107\83\115\47\76\65\81\105\84\82\87\118\68\69\53\116\97\66\111\84\117\80\101\107\70\52\80\105\105\87\82\85\48\98\98\86\68\66\103\103\74\122\78\116\85\57\100\115\86\53\117\56\82\86\97\101\110\86\68\121\43\88\116\114\90\115\48\98\122\52\78\84\88\78\78\114\55\122\53\55\98\80\77\70\80\48\71\119\74\83\99\75\51\97\86\79\74\83\107\55\80\78\116\103\109\47\80\99\84\88\78\117\99\87\104\90\69\72\101\102\47\89\52\86\73\120\53\103\66\52\79\87\57\54\107\49\70\56\118\54\77\82\117\90\111\70\50\111\52\99\121\71\83\77\116\106\70\107\117\75\49\90\66\77\57\113\76\112\43\65\50\72\101\68\99\82\66\65\52\120\65\100\84\106\109\121\68\103\115\108\118\107\112\120\69\111\82\107\47\80\79\72\105\74\80\69\84\97\87\55\101\100\57\67\109\100\81\70\110\56\52\122\88\97\79\109\54\98\43\72\52\88\107\81\114\106\101\78\112\102\79\81\99\75\66\56\43\121\102\115\118\107\101\84\68\51\111\66\78\47\49\75\102\72\121\114\121\65\49\115\83\67\48\88\110\77\109\73\100\72\90\116\113\75\101\110\80\113\107\115\69\85\106\75\53\117\111\78\57\48\113\102\107\118\76\72\70\107\111\116\86\86\84\103\111\67\75\111\121\73\85\81\86\112\122\104\54\82\90\76\78\56\55\112\49\86\81\107\121\74\82\73\66\115\121\84\52\118\84\112\109\103\115\51\112\112\47\116\108\107\43\79\48\85\87\48\85\48\106\70\102\47\56\73\108\53\56\50\102\49\75\52\119\50\107\77\112\113\43\102\100\49\86\90\65\110\117\56\50\111\76\43\87\109\47\73\48\48\120\55\98\82\77\89\117\116\87\88\56\54\67\113\79\68\104\70\54\83\112\86\104\121\99\102\103\54\121\73\80\70\80\98\68\52\103\111\80\72\108\70\87\81\121\75\51\85\90\107\100\98\84\51\85\111\104\50\48\100\51\79\73\89\84\78\103\88\49\72\85\72\47\119\71\87\67\90\49\117\56\51\69\86\120\52\122\57\103\86\86\76\99\54\65\47\105\81\71\111\122\83\100\97\97\121\103\83\110\98\54\121\75\79\75\70\73\51\90\43\102\51\110\78\119\83\81\78\100\77\104\85\54\48\90\108\98\86\102\76\56\99\97\122\83\84\102\105\119\108\119\99\77\89\89\79\112\76\47\103\90\118\117\115\72\54\73\66\75\102\78\120\77\108\74\79\66\111\51\107\52\78\108\76\99\83\43\106\87\75\109\112\120\120\47\73\76\66\47\57\70\84\68\79\73\55\74\87\65\104\51\115\72\48\101\110\119\110\113\72\110\70\67\110\112\75\122\105\53\86\112\100\54\66\120\119\117\82\68\106\117\68\102\79\73\48\115\43\97\65\81\98\66\112\72\88\116\73\54\122\113\78\98\115\79\118\122\103\52\106\89\69\106\122\112\109\114\120\47\66\68\105\83\70\105\100\117\85\71\49\57\103\47\103\100\115\67\75\50\47\121\50\55\70\116\73\77\71\121\69\84\43\76\66\88\100\110\109\115\116\67\81\113\54\72\101\101\85\89\57\114\73\50\79\120\72\80\70\78\69\72\120\119\81\101\117\122\97\90\57\103\75\49\49\81\74\85\49\105\65\82\104\108\43\100\101\120\54\48\72\51\70\49\85\76\88\52\70\109\86\115\48\121\90\70\73\109\85\47\53\111\49\68\75\87\97\72\98\75\103\119\115\90\71\75\108\110\79\101\83\106\118\98\112\75\117\111\121\69\100\70\103\113\71\116\81\102\73\73\82\81\118\65\103\83\89\89\55\66\121\70\72\47\114\80\82\80\117\110\56\88\107\52\78\77\89\75\108\104\75\87\120\85\99\55\57\67\89\55\118\115\56\116\70\49\107\108\115\100\109\65\84\82\76\70\117\104\102\78\73\106\98\43\113\53\76\48\65\111\122\86\101\56\50\87\57\111\107\52\110\52\67\106\121\53\67\122\72\43\81\79\105\98\48\105\113\90\101\55\115\106\106\78\47\101\100\73\108\117\90\53\112\79\103\54\85\84\69\122\122\71\49\103\120\48\115\70\100\111\73\47\119\82\54\118\120\67\65\122\81\102\85\55\76\99\47\121\69\83\55\54\82\116\87\74\75\56\116\122\72\65\106\90\56\79\101\67\74\65\52\78\73\71\106\99\83\89\85\70\118\83\57\54\82\115\109\122\79\103\111\115\107\115\87\114\57\54\99\84\113\108\55\48\54\115\119\110\43\121\81\103\57\122\68\83\67\86\109\109\105\116\103\98\109\99\103\76\121\69\80\72\66\97\74\108\67\72\52\55\107\84\73\83\115\120\57\109\54\113\84\107\47\115\89\81\111\101\66\68\104\50\107\69\100\97\88\90\77\86\106\119\50\90\84\47\98\112\121\99\81\98\99\85\81\86\69\102\88\108\86\112\116\113\98\49\98\121\74\103\116\82\120\109\98\77\55\85\111\81\78\106\48\106\105\90\78\122\51\57\74\88\105\67\85\87\86\49\120\85\68\90\79\68\69\73\49\53\53\113\56\114\78\85\74\108\121\112\104\76\100\52\80\108\79\105\97\101\86\107\67\80\102\78\69\84\67\104\103\121\49\66\118\89\67\110\86\114\106\115\50\47\48\54\112\50\72\52\77\86\121\53\71\71\109\49\110\68\115\81\105\80\109\107\51\120\70\103\77\82\76\113\79\97\114\86\114\119\78\81\109\56\107\78\90\119\88\121\113\107\112\67\114\109\69\53\53\120\82\105\117\88\116\84\51\80\104\79\84\120\72\77\121\105\122\101\108\79\70\113\98\108\117\67\69\89\76\78\83\52\72\50\108\98\78\101\78\68\106\109\110\117\79\98\73\99\48\74\84\51\121\67\75\104\112\84\76\67\80\57\89\57\71\85\70\84\104\101\66\53\104\77\115\82\119\50\80\104\73\82\56\43\82\74\120\83\75\70\48\100\43\83\108\106\69\111\74\79\68\69\90\78\83\86\74\70\114\52\77\78\117\115\97\47\88\107\108\117\68\83\68\50\76\113\68\116\79\107\51\53\86\102\66\57\117\114\104\76\115\109\73\74\54\87\49\86\122\78\81\99\73\50\48\112\89\108\97\56\78\99\120\70\53\118\99\47\118\101\68\77\76\82\116\89\71\102\99\47\66\70\101\120\114\115\55\117\56\54\110\70\85\115\52\82\119\121\49\72\72\120\56\101\73\50\47\52\121\105\57\97\50\114\109\88\78\56\56\76\73\74\43\54\99\121\103\65\55\115\74\84\106\110\98\53\77\87\51\49\48\50\98\47\100\115\100\109\53\104\120\122\88\54\43\65\116\54\120\103\122\111\99\69\76\116\89\121\87\105\68\82\56\71\43\74\47\81\75\80\78\122\113\66\100\83\52\109\101\110\57\122\48\86\78\120\75\52\122\109\82\113\89\52\81\118\78\89\75\66\76\120\116\109\73\57\72\47\103\82\69\74\85\104\65\108\55\73\116\56\56\122\103\106\52\101\66\86\108\120\49\86\80\121\113\78\81\118\75\105\107\88\52\106\112\81\80\56\78\100\66\114\98\84\47\43\105\97\121\90\53\103\72\102\116\80\116\79\50\116\88\102\70\71\81\121\104\54\89\49\56\68\53\104\72\70\114\50\78\114\77\107\118\69\102\88\54\76\51\86\102\118\56\67\106\115\53\122\74\77\107\75\118\81\106\90\86\117\108\119\88\102\116\43\67\114\75\120\113\66\50\102\77\56\90\83\73\67\52\53\84\80\48\114\55\74\70\74\98\98\109\87\102\121\51\83\50\72\114\101\76\53\68\74\109\76\118\49\101\73\98\74\108\57\110\71\83\53\110\70\77\43\121\76\87\65\67\99\83\49\72\119\117\122\86\120\117\65\57\70\76\112\122\73\120\111\121\52\50\56\53\65\56\86\88\47\117\119\121\117\70\57\114\84\97\81\72\101\89\108\85\71\75\47\77\53\113\77\79\84\88\109\108\54\87\111\105\89\76\78\52\48\57\83\90\53\83\53\53\112\82\78\98\84\97\56\113\67\74\53\83\100\113\89\117\84\119\104\111\116\108\50\89\67\89\98\51\71\75\119\83\68\88\112\88\75\119\65\108\86\47\121\69\108\119\79\102\48\77\83\50\43\69\48\56\89\102\48\108\56\49\65\108\103\104\49\80\86\50\112\57\99\109\77\81\68\72\65\115\120\52\73\77\118\48\54\116\83\121\65\69\115\115\83\81\113\115\101\69\112\47\108\121\81\68\100\49\75\50\87\78\54\121\56\77\88\66\115\66\88\52\53\51\101\57\109\67\76\79\90\106\116\68\77\67\81\77\112\121\79\100\118\112\113\108\80\50\90\100\65\75\90\86\102\48\110\52\80\70\57\86\106\99\116\120\43\98\74\43\85\78\90\117\57\102\71\107\86\81\69\53\120\111\97\107\119\43\118\65\84\118\79\104\98\115\121\97\57\120\108\72\75\106\65\80\77\88\69\81\104\113\104\89\79\66\53\99\97\84\103\49\106\113\109\77\117\75\110\75\52\83\98\112\98\111\113\68\77\108\115\54\97\105\79\85\87\119\109\56\90\111\56\98\82\79\90\49\106\76\57\121\76\74\118\50\55\104\107\100\50\75\98\115\56\82\43\75\108\108\50\56\56\98\80\105\54\54\73\119\79\50\67\110\88\57\48\115\86\68\107\54\49\72\105\84\49\119\89\84\110\71\113\102\75\86\48\97\122\106\88\85\100\55\82\83\43\105\116\76\98\109\56\111\102\116\100\107\99\103\78\86\104\56\48\122\52\112\52\97\73\73\73\119\110\56\111\113\68\83\78\114\86\68\72\56\121\80\104\116\47\75\109\115\101\104\76\98\100\121\89\57\81\110\50\53\82\49\67\102\81\115\122\75\104\73\88\74\104\121\111\118\54\55\76\43\99\97\108\47\83\90\70\118\70\54\54\69\66\121\85\111\97\76\78\69\68\69\113\90\118\82\74\56\100\84\88\115\83\51\81\89\110\88\106\73\83\97\85\114\54\73\71\71\103\118\89\67\85\90\112\73\108\65\99\115\56\115\79\117\89\117\84\98\114\47\103\70\111\47\73\98\102\88\54\107\89\67\121\115\83\68\67\67\113\77\109\110\101\78\82\53\103\83\113\116\71\85\66\76\106\88\119\117\90\65\43\108\75\74\79\54\107\56\49\97\55\98\67\75\50\116\109\105\102\98\97\47\51\83\100\77\74\75\54\79\80\121\71\111\66\103\84\57\80\111\70\80\68\112\54\107\77\103\76\65\82\67\72\53\113\89\97\88\111\43\68\98\110\110\54\65\115\115\73\90\122\82\86\108\102\82\72\116\81\114\109\73\78\87\57\77\80\119\52\114\121\97\121\119\113\51\70\90\85\50\77\114\57\65\106\85\65\76\82\111\52\48\53\65\102\51\112\52\118\82\120\55\113\66\83\74\68\103\108\109\112\76\105\67\50\47\84\103\50\116\48\88\97\85\85\108\43\47\51\69\118\115\69\55\119\99\49\69\121\98\104\115\88\81\97\77\103\120\55\110\70\73\88\68\114\106\82\105\116\72\83\122\108\56\82\48\108\68\50\76\55\74\83\78\114\72\101\50\104\68\108\122\81\115\104\109\77\53\83\87\67\81\102\56\84\115\87\54\114\89\67\88\48\57\73\70\53\108\89\111\111\57\118\89\90\90\65\74\83\70\107\89\105\52\90\88\54\82\83\99\114\88\73\68\89\120\43\90\114\75\102\55\97\121\102\98\108\84\52\55\49\119\79\51\111\76\71\75\70\43\117\110\89\103\83\108\108\73\97\98\73\48\72\85\108\87\107\56\120\80\97\109\90\53\70\75\83\77\66\117\71\83\119\43\52\47\72\109\113\120\105\72\90\108\119\75\79\78\115\119\112\57\86\115\47\71\97\101\73\116\106\67\106\67\54\49\80\112\119\103\83\116\104\75\107\66\56\75\118\103\102\84\97\57\49\99\43\75\68\101\85\108\74\114\118\109\81\111\50\70\109\56\88\115\66\107\68\86\57\119\108\86\83\119\115\53\119\97\84\109\115\117\88\106\72\43\84\97\52\88\107\79\50\114\55\110\75\117\53\118\114\90\78\68\114\53\66\75\54\115\67\48\86\84\122\50\78\104\86\85\81\122\47\66\102\116\51\103\86\122\116\54\120\53\97\81\101\79\54\75\67\114\76\107\103\47\87\118\98\107\113\77\43\102\56\69\67\81\99\76\76\97\71\75\70\87\79\111\80\69\53\117\81\83\70\72\81\52\107\111\105\113\57\68\112\84\56\99\51\43\87\81\48\52\66\72\85\115\70\50\99\66\120\103\110\73\86\83\68\56\107\79\100\116\50\113\107\103\81\89\77\117\114\107\118\119\55\107\57\108\56\101\84\106\69\100\112\89\68\53\57\74\118\117\88\106\76\50\82\69\72\53\116\77\106\81\72\107\84\65\70\120\66\103\43\81\55\98\43\68\86\105\122\81\75\102\115\113\106\68\107\114\75\87\103\54\86\116\86\51\110\120\108\119\108\77\80\53\57\78\102\54\69\90\111\97\78\56\101\74\81\109\69\72\111\43\112\57\99\85\99\74\71\105\50\119\109\57\54\81\47\70\116\104\86\111\100\76\101\107\108\117\117\74\51\43\56\79\53\48\89\73\98\113\70\109\81\70\83\104\119\84\115\54\79\117\90\108\104\53\79\105\54\77\73\47\84\50\81\110\75\74\67\81\83\66\116\104\53\66\74\120\109\47\87\86\85\48\108\120\99\103\51\71\111\97\118\66\73\100\101\77\115\80\80\78\71\43\100\55\81\117\50\119\107\116\82\83\106\68\97\66\66\110\53\88\110\108\119\101\114\52\50\111\67\53\111\117\48\117\114\47\118\75\85\57\109\48\121\53\84\65\47\68\102\70\77\113\122\115\105\111\112\101\111\119\72\43\71\108\100\102\85\120\75\72\74\113\72\81\104\47\108\118\100\102\80\101\85\116\97\65\75\77\97\115\106\117\106\85\97\104\82\114\115\106\53\105\119\114\55\50\111\71\103\76\118\43\86\87\77\102\70\107\52\105\119\112\66\89\79\114\105\109\99\69\116\50\55\100\120\118\119\55\99\76\52\99\109\77\119\108\106\83\47\53\86\121\50\119\112\56\120\90\98\67\104\101\78\86\102\83\75\114\80\113\99\112\53\109\78\65\75\117\83\117\105\52\56\120\85\82\79\65\47\98\89\53\101\72\111\74\49\77\79\108\85\122\105\85\112\50\67\80\85\67\71\90\49\80\72\88\112\111\90\54\98\78\109\71\79\102\85\109\117\73\99\47\79\52\109\111\119\61\61";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
